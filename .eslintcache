[{"/home/pa.ahmed/Desktop/react-learning/netflix/src/App.js":"1","/home/pa.ahmed/Desktop/react-learning/netflix/src/components/navbar/index.js":"2","/home/pa.ahmed/Desktop/react-learning/netflix/src/index.js":"3","/home/pa.ahmed/Desktop/react-learning/netflix/src/components/row/index.js":"4","/home/pa.ahmed/Desktop/react-learning/netflix/src/components/banner/index.js":"5","/home/pa.ahmed/Desktop/react-learning/netflix/src/services/axios.js":"6","/home/pa.ahmed/Desktop/react-learning/netflix/src/services/externalUrl.js":"7","/home/pa.ahmed/Desktop/react-learning/netflix/src/reportWebVitals.js":"8"},{"size":985,"mtime":1606841281416,"results":"9","hashOfConfig":"10"},{"size":1065,"mtime":1606724333880,"results":"11","hashOfConfig":"10"},{"size":500,"mtime":1606215979160,"results":"12","hashOfConfig":"10"},{"size":1995,"mtime":1606798098310,"results":"13","hashOfConfig":"10"},{"size":1289,"mtime":1606798166698,"results":"14","hashOfConfig":"10"},{"size":183,"mtime":1606576580897,"results":"15","hashOfConfig":"10"},{"size":705,"mtime":1606797823962,"results":"16","hashOfConfig":"10"},{"size":362,"mtime":1606215979160,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1274l92",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"/home/pa.ahmed/Desktop/react-learning/netflix/src/App.js",[],["40","41"],"/home/pa.ahmed/Desktop/react-learning/netflix/src/components/navbar/index.js",[],["42","43"],"/home/pa.ahmed/Desktop/react-learning/netflix/src/index.js",[],["44","45"],"/home/pa.ahmed/Desktop/react-learning/netflix/src/components/row/index.js",["46","47"],"import React, { useState, useEffect } from 'react'\nimport './index.css';\nimport { axiosInstance } from '../../services/axios';\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\nconst BASE_URL = \"https://image.tmdb.org/t/p/original/\";\nconst opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n        autoplay: 1,\n    },\n};\n\nfunction Index({ title, url, isLarge }) {\n    const [movies, setMovies] = useState([]);\n    const [videoId, setVideoId] = useState(\"\");\n    useEffect(() => {\n        (async function(){\n            try {\n                let result = await axiosInstance.get(url);\n                setMovies(result.data.results);\n                // console.log(result);\n                return result\n            } catch (err) {\n                console.log(err);\n            }\n        })();\n    }, []);\n    const handleMovieClick = (movie) => {\n        console.log(\"movie click \", movie);\n        movieTrailer(movie?.name || movie?.title || movie?.original_name || \"\")\n            .then((url) => {\n                console.log(\"Url is \", url);\n                url = new URLSearchParams((new URL(url)).search);\n                console.log(url.get(\"v\"));\n                if (videoId) {\n                    setVideoId(\"\");\n                } else {\n                    setVideoId(url.get(\"v\"));\n                }\n            })\n            .catch(err => {\n                console.log(\"eror in movie trailer fetching\", err);\n            })\n    }\n\n    console.log(movies)\n    return (\n        <div className=\"Row\">\n            <h1>{title}</h1>\n            <div className=\"RowPosters\">\n                {movies.map(movie => <img key={movie.id} src={`${BASE_URL}${isLarge ? movie.poster_path : movie.backdrop_path}`} className={isLarge ? \"RowPoster RowPosterLarge\" : \"RowPoster\"} onClick={() => handleMovieClick(movie)} />)}\n            </div>\n            {videoId ? <YouTube videoId={videoId} opts={opts} /> : \"\"}\n        </div>\n    )\n}\n\nexport default Index\n","/home/pa.ahmed/Desktop/react-learning/netflix/src/components/banner/index.js",[],"/home/pa.ahmed/Desktop/react-learning/netflix/src/services/axios.js",[],"/home/pa.ahmed/Desktop/react-learning/netflix/src/services/externalUrl.js",["48"],"const API_KEY = \"d0b63d6379efc56e8559b7ae2f7eb754\";\n\nconst requests = {\n    'netflixOriginals':`/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    'trending':`/trending/all/week?api_key=${API_KEY}`,\n    'documentaries':`/discover/tv?api_key=${API_KEY}`,\n    'topRated':`/movie/top_rated?api_key=${API_KEY}`,\n    'actionMovies':`/discover/movie?api_key=${API_KEY}&with_genres=99`,\n    'comedyMovies':`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    'horrorMovies':`/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    'romanceMovies':`/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    'documentaries':`/discover/movie?api_key=${API_KEY}&with_genres=28`\n\n}\n\nexport {\n    requests\n};","/home/pa.ahmed/Desktop/react-learning/netflix/src/reportWebVitals.js",[],["49","50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"51","replacedBy":"55"},{"ruleId":"53","replacedBy":"56"},{"ruleId":"51","replacedBy":"57"},{"ruleId":"53","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":29,"column":8,"nodeType":"61","endLine":29,"endColumn":10,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":53,"column":38,"nodeType":"65","endLine":53,"endColumn":235},{"ruleId":"66","severity":1,"message":"67","line":12,"column":5,"nodeType":"68","messageId":"69","endLine":12,"endColumn":20},{"ruleId":"51","replacedBy":"70"},{"ruleId":"53","replacedBy":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],["72"],["73"],["72"],["73"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["74"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-keys","Duplicate key 'documentaries'.","ObjectExpression","unexpected",["72"],["73"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [url]",{"range":"77","text":"78"},[843,845],"[url]"]